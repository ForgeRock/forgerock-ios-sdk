name: Build and Test

on:
  workflow_call:
    secrets:
      CONFIG_E2E_CLOUD: 
        description: 'e2e tests configuration file'
        required: true
      SLACK_WEBHOOK_URL:
        description: 'Slack Notifier Webhook'
        required: true
jobs:
  build-and-test:
    runs-on: macos-15
    timeout-minutes: 20

    steps:
      # Clone the repo
      - name: Clone the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          fetch-depth: 0

      # Setup config file for e2e tests
      - name: Setup config file for e2e tests
        env:
          CONFIG_E2E_CLOUD: ${{ secrets.CONFIG_E2E_CLOUD }}
        run: echo $CONFIG_E2E_CLOUD > FRTestHost/FRTestHost/SharedTestFiles/TestConfig/Config-live-01.json

      # Set target Xcode version. For more details and options see:
      # https://github.com/actions/runner-images/blob/main/images/macos/macos-15-Readme.md
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_16.2.app && /usr/bin/xcodebuild -version

      # # Add Homebrew binary path to PATH
      # - name: Ensure xcresultparser is in PATH
      #   run: |
      #     echo "/opt/homebrew/bin" >> $GITHUB_PATH
      #     echo "Added /opt/homebrew/bin to PATH."

      # Restore `xcresultparser` from cache
      - name: Restore xcresultparser from cache
        id: cache-xcresultparser
        uses: actions/cache@v3
        with:
          path: /opt/homebrew/bin/xcresultparser
          key: ${{ runner.os }}-xcresultparser
          restore-keys: |
            ${{ runner.os }}-xcresultparser

      - name: Install xcresultparser if not cached
        if: steps.cache-xcresultparser.outputs.cache-hit != 'true'
        run: |
          brew tap a7ex/homebrew-formulae
          brew install xcresultparser
          echo "Installed xcresultparser (cache miss...)"

      # Run all tests
      - name: Run tests
        run: |
          xcodebuild test \
          -scheme FRTestHost \
          -workspace e2e/FRExample.xcworkspace \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.2' \
          -derivedDataPath DerivedData \
          TEST_TARGET_SIGNING=YES \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults | grep -E 'Test Case|^Executed|error:'

      # Convert test results to JUnit format
      - name: Convert Test Results to JUnit
        run: xcresultparser -o junit TestResults.xcresult > test-report.xml

      # Publish the test results
      - name: Publish test results
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: Unit tests results
          path: './test*.xml'
          list-suites: 'all'
          list-tests: 'all'
          fail-on-error: 'true'
          reporter: java-junit
 
      # # Send slack notification with result status
      # - uses: 8398a7/action-slack@v3
      #   with:
      #     mention: 'stoyan.petrov'
      #     if_mention: 'failure,cancelled'
      #     fields: repo,author,eventName,message,job,pullRequest,took
      #     status: ${{ job.status }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   if: always()
